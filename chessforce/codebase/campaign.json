{"title":"Play Chess!","description":"You can submit this task by moving a chess piece. Every new move on the other side will add a new task","instructions":"You can submit this task by moving a chess piece. Every new move on the other side will add a new task","template":"<link rel=\"stylesheet\"\n      href=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.css\"\n      integrity=\"sha384-q94+BZtLrkL1/ohfjR8c6L+A6qzNH9R2hBLwyoAfu3i/WCvQjzL2RQJ3uNHDISdU\"\n      crossorigin=\"anonymous\">\n<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"\n        integrity=\"sha384-ZvpUoO/+PpLXR1lu4jmpXWu80pZlYUAfxl5NsBMWOEPSjUn/6Z/hRTt8+pR6L4N2\"\n        crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.3/chess.min.js\" integrity=\"sha512-xRllwz2gdZciIB+AkEbeq+gVhX8VB8XsfqeFbUh+SzHlN96dEduwtTuVuc2u9EROlmW9+yhRlxjif66ORpsgVA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n<script src=\"https://unpkg.com/@chrisoakman/chessboardjs@1.0.0/dist/chessboard-1.0.0.min.js\"\n        integrity=\"sha384-8Vi8VHwn3vjQ9eUHUxex3JSN/NFqUg3QbPyX8kWyb93+8AC/pPWTzj+nHtbC5bxD\"\n        crossorigin=\"anonymous\"></script>\n<script>\n$( document ).ready(function() {\n// NOTE: this example uses the chess.js library:\n// https://github.com/jhlywa/chess.js\n\nvar board = null\nvar game = new Chess('${fen}')\nvar $status = $('#status')\nvar $fen = $('#fen')\nvar $pgn = $('#pgn')\n\n            function onDragStart(source, piece, position, orientation) {\n                // do not pick up pieces if the game is over\n                if (game.game_over()) return false\n                // only pick up pieces for White\n                if (game.turn() === 'w' || piece.search(/^w/) !== -1) return false\n            }\n\nfunction onDrop (source, target) {\n  // see if the move is legal\n  var move = game.move({\n    from: source,\n    to: target,\n    promotion: 'q' // NOTE: always promote to a queen for example simplicity\n  })\n\n  // illegal move\n  if (move === null) return 'snapback'\n$('#fen').val(game.fen())\nforceSubmit()\n  updateStatus()\n}\n\n// update the board position after the piece snap\n// for castling, en passant, pawn promotion\nfunction onSnapEnd () {\n  board.position(game.fen())\n}\n\nfunction updateStatus () {\n  var status = ''\n\n  var moveColor = 'White'\n  if (game.turn() === 'b') {\n    moveColor = 'Black'\n  }\n\n  // checkmate?\n  if (game.in_checkmate()) {\n    status = 'Game over, ' + moveColor + ' is in checkmate.<br><button type=\"submit\">End Game</button>'\n  }\n\n  // draw?\n  else if (game.in_draw()) {\n    status = 'Game over, drawn position<br><button type=\"submit\">End Game</button>'\n  }\n\n  // game still on\n  else {\n    status = moveColor + ' to move'\n\n    // check?\n    if (game.in_check()) {\n      status += ', ' + moveColor + ' is in check'\n    }\n  }\n\n  $status.html(status)\n  $fen.html(game.fen())\n  $pgn.html(game.pgn())\n}\n\nvar config = {\n  draggable: true,\n  pieceTheme: 'https://chessboardjs.com/img/chesspieces/wikipedia/{piece}.png',\n  position: game.fen(),\n  orientation: 'black',\n  onDragStart: onDragStart,\n  onDrop: onDrop,\n  onSnapEnd: onSnapEnd\n}\nboard = Chessboard('myBoard', config)\n$(window).resize(board.resize)\nforceResize();\nupdateStatus()\n});\n\n</script>\n<input type=\"hidden\" id=\"fen\" name=\"fen\" />\n<div id=\"myBoard\" style=\"width: 100%; max-width: 450px; margin: 0 auto;\"></div>\n<h2 id=\"status\" style=\"text-align:center\"></h2>\n<p  style=\"text-align:center\">Task will be submitted when you move a piece</p> ","image":"https://cdn3.iconfinder.com/data/icons/hobby-2/64/Chess-game-piece-strategy-512.png","category":"---","example_task":{"fen":"rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq d3 0 1"},"version":1,"reward":"0.1"}